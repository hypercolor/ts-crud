{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/crud-handlers.ts","webpack:///./src/crud-routes.ts","webpack:///./src/promise_queue.ts","webpack:///external \"p-queue\"","webpack:///external \"ts-express-controller\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEkJ;AAEjG;;;;;;;;;;;;;;;;;ACIJ;AAK7C;IAAA;IAiIA,CAAC;IA9He,0BAAa,GAA3B,UAAwD,GAAiB,EAAE,KAA6B,EAAE,WAAgB,EAAE,YAAiC;QAE3J,IAAM,KAAK,GAAG,YAAY,GAAG,EAAE,GAAG,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;QACnD,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC;aACrE,IAAI,CAAC,iBAAO;YACX,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IAEL,CAAC;IAEa,gCAAmB,GAAjC,UAA8D,GAAiB,EAAE,KAA6B;QAC5G,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;YACnC,IAAM,KAAK,GAAG,IAAI,2DAAY,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,UAAe;gBAC/D,MAAM,CAAC;oBACL,MAAM,CAAC,uBAAuB,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;gBACzD,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,uBAAuB,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IAEa,0BAAa,GAA3B,UAAwD,GAAiB,EAAE,KAA6B,EAAE,QAAgB;QACxH,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;aACtD,IAAI,CAAC,UAAC,MAAS;YACd,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,QAAQ,EAAC,CAAC,CAAC;YAC5F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGa,sBAAS,GAAvB,UAAoD,GAAiB,EAAE,KAA6B,EAAE,QAAgB;QACpH,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3D,CAAC;IAEa,uBAAU,GAAxB,UAAqD,GAAiB,EAAE,KAA6B;QAArG,iBAWC;QAVC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;YACnC,IAAM,KAAK,GAAG,IAAI,2DAAY,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,UAAe;gBAC/D,MAAM,CAAC;oBACL,MAAM,CAAC,KAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;gBAC7D,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAEa,yBAAY,GAA1B,UAAuD,GAAiB,EAAE,KAA6B,EAAE,QAAgB;QACvH,IAAI,MAAM,CAAC;QACX,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;aAC5D,IAAI,CAAC,UAAC,CAAI;YACT,MAAM,GAAG,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,QAAQ,EAAC,CAAC,CAAC;YAC5F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC;aACD,IAAI,CAAC;YACJ,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,6BAAgB,GAA9B,UAA2D,GAAiB,EAAE,KAA6B,EAAE,QAAgB;QAC3H,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;aACtD,IAAI,CAAC,UAAC,MAAS;YACd,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,QAAQ,EAAC,CAAC,CAAC;YAC5F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,+BAAkB,GAAhC,UAA6D,GAAiB,EAAE,KAA6B,EAAE,QAAgB;QAC7H,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;aAC5D,IAAI,CAAC,UAAC,MAAS;YACd,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,QAAQ,EAAC,CAAC,CAAC;YAC5F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,mCAAsB,GAApC,UAAiE,KAA6B,EAAE,UAAe,EAAE,GAAiB,EAAE,WAAyB;QAC3J,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,SAAS,IAAI,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,uBAAuB,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC;iBAC3D,IAAI,CAAC,UAAC,MAAS;gBACd,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;oBACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,UAAU,CAAC,EAAE,EAAC,CAAC,CAAC;gBACjG,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,WAAW,CAAC,EAAC;wBACf,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;oBACnF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;oBACvD,CAAC;gBACH,CAAC;YACH,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,MAAS;gBACd,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;yBAC9C,IAAI,CAAC,UAAC,YAAiB;wBACtB,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,YAAY,EAAC,CAAC,CAAC;oBAChG,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEa,kCAAqB,GAAnC,UAAgE,GAAiB,EAAE,KAA6B,EAAE,EAAU,EAAE,WAAiB;QAC7I,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,EAAC,EAAE,MAAC,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACnD,CAAC;IACH,mBAAC;AAAD,CAAC;;AAGD;;;;;;;;GAQG;AACH,iLAAiL;AACjL,+DAA+D;AAC/D,8DAA8D;AAC9D,aAAa;AACb,8DAA8D;AAC9D,wBAAwB;AACxB,+BAA+B;AAC/B,0GAA0G;AAC1G,iBAAiB;AACjB,4BAA4B;AAC5B,wFAAwF;AACxF,mBAAmB;AACnB,4DAA4D;AAC5D,YAAY;AACZ,UAAU;AACV,SAAS;AACT,wBAAwB;AACxB,yCAAyC;AACzC,0CAA0C;AAC1C,iBAAiB;AACjB,0DAA0D;AAC1D,yCAAyC;AACzC,sGAAsG;AACtG,cAAc;AACd,UAAU;AACV,UAAU;AACV,MAAM;AACN,IAAI;AAEJ;;;;;;;GAOG;AACH,iCAA6D,KAA6B,EAAE,UAAe,EAAE,GAAiB;IAC5H,kBAAkB;IAClB,uEAAuE;IACvE,WAAW;IACT,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;IAC9B,kDAAkD;IAClD,0DAA0D;IAC1D,IAAI;IACJ,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;IACrC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC;SAClC,IAAI,CAAC,qBAAW;QACf,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC9C,IAAI,CAAC,UAAC,YAAiB;gBACtB,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,YAAY,EAAC,CAAC,CAAC;YAChG,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;IACL,IAAI;AACN,CAAC;AAED;;;;;;;;GAQG;AACH,uJAAuJ;AACvJ,yCAAyC;AACzC,iDAAiD;AACjD,IAAI;AAGJ;;;;;;GAMG;AACH,8BAA0D,KAA6B,EAAE,kBAA0B;IACjH,qGAAqG;IACrG,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;SAC3C,IAAI,CAAC,sBAAY;QAChB,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;oBACpB,IAAI,EAAE,GAAG;oBACT,KAAK,EAAE,yBAAyB,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;iBAChF,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAmB,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,YAAY,KAAK,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,qBAAW;gBAC7C,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;wBACpB,IAAI,EAAE,GAAG;wBACT,KAAK,EAAE,yBAAyB,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,GAAG,WAAW;qBAC/E,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;iBACF,IAAI,CAAC;gBACJ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;gBACpB,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,yBAAyB,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;aAChF,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;IAGH,6BAA6B,SAAiC,EAAE,gBAAwB;QACtF,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,SAAO,GAAG,KAAK,CAAC;YACpB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,sBAAY;gBACzD,EAAE,CAAC,CAAC,YAAY,KAAK,gBAAgB,CAAC,CAAC,CAAC;oBACtC,SAAO,GAAG,IAAI,CAAC;gBACjB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAO,CAAC;QACjB,CAAC;IACH,CAAC;AACH,CAAC;AAED;;;;;GAKG;AACH,2BAA2B,kBAA0B;IACnD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,IAAI,CAAC;YACH,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAC/C,OAAO,CAAC,OAAO,CAAC,CAAC;QACnB,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,kCAAkC,GAAG,kBAAkB,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACxF,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3SD,+EAA+E;AAC/E,gDAAgD;AAChD,+CAA+C;AACF;AAGI;AAGjD;;GAEG;AACH;IAA8B,4BAAU;IACtC,kBAAoB,KAA+B,EAAU,WAAmB;QAAhF,YAAmF,kBAAM;YACvF,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B,CAAC,SAAE;QAFgB,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAQ;;IAE7E,CAAC;IACM,gCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/E,CAAC;IACH,eAAC;AAAD,CAAC,CAP6B,gEAAU,GAOvC;;AAGD;;GAEG;AACH;IAA+B,6BAAU;IACvC,mBAAoB,KAA+B;QAAnD,YAAsD,iBAAO,SAAE;QAA3C,WAAK,GAAL,KAAK,CAA0B;;IAAW,CAAC;IACrD,iCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IACH,gBAAC;AAAD,CAAC,CAL8B,gEAAU,GAKxC;;AAED;;GAEG;AACH;IAA8D,gCAAU;IACtE,sBAAoB,KAA+B,EAAU,WAAmB;QAAhF,YAAmF,kBAAM;YACvF,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B,CAAC,SAAE;QAFgB,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAQ;;IAE7E,CAAC;IACM,oCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3E,CAAC;IACH,mBAAC;AAAD,CAAC,CAP6D,gEAAU,GAOvE;;AAED;;GAEG;AACH;IAA+D,iCAAU;IACvE,uBAAoB,KAA+B;QAAnD,YAAsD,iBAAO,SAAE;QAA3C,WAAK,GAAL,KAAK,CAA0B;;IAAW,CAAC;IACrD,qCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IACH,oBAAC;AAAD,CAAC,CAL8D,gEAAU,GAKxE;;AAED;;GAEG;AACH;IAAiC,+BAAU;IACzC,qBAAoB,KAA+B,EAAU,WAAmB;QAAhF,YAAmF,kBAAM;YACvF,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B,CAAC,SAAE;QAFgB,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAQ;;IAE7E,CAAC;IACM,mCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9E,CAAC;IACH,kBAAC;AAAD,CAAC,CAPgC,gEAAU,GAO1C;;AAED;;GAEG;AACH;IAAgC,8BAAU;IACxC,oBAAoB,KAA+B,EAAU,WAAiB,EAAU,aAAuB;QAA/G,YAAkH,iBAAO,SAAE;QAAvG,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAM;QAAU,mBAAa,GAAb,aAAa,CAAU;;IAAW,CAAC;IACjH,kCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3F,CAAC;IACH,iBAAC;AAAD,CAAC,CAL+B,gEAAU,GAKzC;;AAGD;IAAsC,oCAAU;IAC9C,0BAAoB,KAA+B,EAAU,WAAmB;QAAhF,YAAmF,kBAAM;YACvF,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B,CAAC,SAAE;QAFgB,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAQ;;IAE7E,CAAC;IACM,wCAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClF,CAAC;IACH,uBAAC;AAAD,CAAC,CAPqC,gEAAU,GAO/C;;AAED;IAAwC,sCAAU;IAChD,4BAAoB,KAA+B,EAAU,WAAmB;QAAhF,YAAmF,kBAAM;YACvF,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B,CAAC,SAAE;QAFgB,WAAK,GAAL,KAAK,CAA0B;QAAU,iBAAW,GAAX,WAAW,CAAQ;;IAE7E,CAAC;IACM,0CAAa,GAAvB,UAAwB,MAAW,EAAE,GAAiB,EAAE,GAAa;QACnE,MAAM,CAAC,2DAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpF,CAAC;IACH,yBAAC;AAAD,CAAC,CAPuC,gEAAU,GAOjD;;;;;;;;;;;;;;;;;;;AC7FiC;AAElC;IAIE,sBAAY,aAAqB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,oCAAM,CAAC,EAAC,WAAW,EAAE,aAAa,EAAC,CAAC,CAAC;IACxD,CAAC;IAEM,0BAAG,GAAV,UAAW,eAAmC;QAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;IAEM,6CAAsB,GAA7B,UAA8B,gBAA2C;QAAzE,iBA0BC;QAzBC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,eAAa,GAAwB,EAAE,CAAC;YAC9C,gBAAgB,CAAC,OAAO,CAAC,yBAAe;gBACtC,qDAAqD;gBACrD,eAAa,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,OAAO,CAAC,GAAG,CAAC,eAAa,CAAC;qBACzB,IAAI,CAAC,iBAAO;oBACX,yCAAyC;oBACzC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACnB,CAAC,CAAC;qBACD,KAAK,CAAC,aAAG;oBACR,0CAA0C;oBAC1C,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,+BAA+B;QACjC,CAAC;IACH,CAAC;IAEH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC5CD,oC;;;;;;;;;;;ACAA,kD","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport {GetRoute, PostRoute, DeleteRoute, MarkDeletedRoute, MarkUndeletedRoute, MultiPutRoute, PutByIdRoute, QueryRoute} from './src/crud-routes';\nexport {IUserRequest} from './src/IUserRequest';\nexport {CrudHandlers} from './src/crud-handlers';\n","\n\nimport {Collection} from 'bookshelf';\nimport {Transaction} from 'knex';\n// import {IUserRequest} from '../../util/auth';\n// import * as e from \"express\";\nimport { IPostgresModelClass, PostgresModel } from \"ts-postgres-model\";\nimport {PromiseQueue} from './promise_queue';\nimport { IUserRequest } from \"./IUserRequest\";\n\n\n\nexport class CrudHandlers {\n\n\n  public static getAllObjects<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, fetchParams: any, allowDeleted: boolean | undefined){\n\n    const query = allowDeleted ? {} : {deleted: false};\n    return new model().where(query).fetchAllForUser(req.user, fetchParams)\n    .then(objects => {\n      return Promise.resolve(objects.toJSON());\n    });\n\n  }\n\n  public static postFromRequestBody<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>) {\n    if (req.body.constructor === Array) {\n      const queue = new PromiseQueue(1);\n      return queue.runAllPromiseFunctions(req.body.map((jsonObject: any) => {\n        return () => {\n          return handlePostForJsonObject(model, jsonObject, req);\n        };\n      }));\n    } else {\n      return handlePostForJsonObject(model, req.body, req);\n    }\n  }\n\n  public static getObjectById<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, objectId: number): Promise<T> {\n    return this.fetchObjectForRequest(req, model, objectId)\n    .then((object: T) => {\n      if (object === null) {\n        return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + objectId});\n      } else {\n        return Promise.resolve(object);\n      }\n    });\n  }\n\n\n  public static putObject<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, objectId: number) {\n    req.body.id = objectId;\n    return this.handlePutForJsonObject(model, req.body, req);\n  }\n\n  public static putObjects<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>): Promise<T | Collection<T>> {\n    if (req.body.constructor === Array) {\n      const queue = new PromiseQueue(1);\n      return queue.runAllPromiseFunctions(req.body.map((jsonObject: any) => {\n        return () => {\n          return this.handlePutForJsonObject(model, jsonObject, req);\n        };\n      }));\n    } else {\n      return this.handlePutForJsonObject(model, req.body, req);\n    }\n  }\n\n  public static deleteObject<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, objectId: number) {\n    let object;\n    return this.fetchObjectForRequest(req, model, objectId, null)\n    .then((o: T) => {\n      object = o;\n      if (object === null) {\n        return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + objectId});\n      } else {\n        return object.destroyForUser(req.user);\n      }\n    })\n    .then(() => {\n      return Promise.resolve();\n    });\n  }\n\n  public static setObjectDeleted<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, objectId: number) {\n    return this.fetchObjectForRequest(req, model, objectId)\n    .then((object: T) => {\n      if (object === null) {\n        return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + objectId});\n      } else {\n        object.deleted = true;\n        return object.saveForUser(req.user);\n      }\n    });\n  }\n\n  public static setObjectUndeleted<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, objectId: number) {\n    return this.fetchObjectForRequest(req, model, objectId, null)\n    .then((object: T) => {\n      if (object === null) {\n        return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + objectId});\n      } else {\n        object.deleted = false;\n        return object.saveForUser(req.user);\n      }\n    });\n  }\n\n  public static handlePutForJsonObject<T extends PostgresModel<T>>(model: IPostgresModelClass<T>, jsonObject: any, req: IUserRequest, transaction?: Transaction): Promise<T> {\n    if (jsonObject.id === undefined || jsonObject.id === '') {\n      return handlePostForJsonObject(model, jsonObject, req);\n    } else {\n      return this.fetchObjectForRequest(req, model, jsonObject.id)\n      .then((object: T) => {\n        if (object === null) {\n          return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + jsonObject.id});\n        } else {\n          if (transaction){\n            return object.updateWithParams(jsonObject, req.user, {transacting: transaction});\n          } else {\n            return object.updateWithParams(jsonObject, req.user);\n          }\n        }\n      })\n      .then((object: T) => {\n        if (req.query.p === undefined) {\n          return Promise.resolve(object);\n        } else {\n          return validateFetchOptions(model, req.query.p)\n          .then((fetchOptions: any) => {\n            return new model().where({id: object.id}).fetchForUser(req.user, {withRelated: fetchOptions});\n          });\n        }\n      });\n    }\n  }\n\n  public static fetchObjectForRequest<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, id: number, fetchParams?: any) {\n    const query = new model().where({id});\n    return query.fetchForUser(req.user, fetchParams);\n  }\n}\n\n\n/**\n * Worker method for PUT\n *\n * @param model\n * @param jsonObject\n * @param req\n * @param transaction\n * @returns {Promise|*}\n */\n// export function handlePutForJsonObject<T extends PostgresModel<T>>(model: IPostgresModelClass<T>, jsonObject: any, req: IUserRequest, transaction?: Transaction): Promise<T> {\n//   if (jsonObject.id === undefined || jsonObject.id === '') {\n//     return handlePostForJsonObject(model, jsonObject, req);\n//   } else {\n//     return fetchObjectForRequest(req, model, jsonObject.id)\n//     .then(object => {\n//       if (object === null) {\n//         return Promise.reject({code: 404, error: model.instanceName + ' not found: ' + jsonObject.id});\n//       } else {\n//         if (transaction){\n//           return object.updateWithParams(jsonObject,req, {transacting: transaction});\n//         } else {\n//           return object.updateWithParams(jsonObject,req);\n//         }\n//       }\n//     })\n//     .then(object => {\n//       if (req.query.p === undefined) {\n//         return Promise.resolve(object);\n//       } else {\n//         return validateFetchOptions(model, req.query.p)\n//         .then((fetchOptions: any) => {\n//           return new model().where({id: object.id}).fetchForUser(req, {withRelated: fetchOptions});\n//         });\n//       }\n//     });\n//   }\n// }\n\n/**\n * Worker method for POST\n *\n * @param model\n * @param jsonObject\n * @param req\n * @returns {Promise|*}\n */\nfunction handlePostForJsonObject<T extends PostgresModel<T>>(model: IPostgresModelClass<T>, jsonObject: any, req: IUserRequest) {\n  // if (!req.user){\n  //   return Promise.reject({code: 500, error: 'Request had no user.'});\n  // } else {\n    jsonObject = jsonObject || {};\n    // if (((new model().columns) as any)['userId']) {\n    //   jsonObject.userId = jsonObject.userId || req.user.id;\n    // }\n    const object = new model(jsonObject);\n    return object.saveForUser(req.user)\n    .then(savedObject => {\n      if (req.query.p === undefined) {\n        return Promise.resolve(savedObject);\n      } else {\n        return validateFetchOptions(model, req.query.p)\n        .then((fetchOptions: any) => {\n          return new model().where({id: object.id}).fetchForUser(req.user, {withRelated: fetchOptions});\n        });\n      }\n    });\n  // }\n}\n\n/**\n * Fetch an object for a req.\n *\n * @param req\n * @param model\n * @param id\n * @param [fetchParams] - Fetch options\n * @returns {*|Promise.<Model|null>}\n */\n// export function fetchObjectForRequest<T extends PostgresModel<T>>(req: IUserRequest, model: IPostgresModelClass<T>, id: number, fetchParams?: any) {\n//   let query = new model().where({id});\n//   return query.fetchForUser(req, fetchParams);\n// }\n\n\n/**\n * Validate the fetch parameters specified in population-enabled routes.\n *\n * @param model\n * @param fetchOptionsString\n * @returns {*}\n */\nfunction validateFetchOptions<T extends PostgresModel<T>>(model: IPostgresModelClass<T>, fetchOptionsString: string) {\n  // console.log(\"Validating fetch options for \" + model.model.MODEL_NAME + \": \" + fetchOptionsString);\n  return parseFetchOptions(fetchOptionsString)\n  .then(fetchOptions => {\n    if (typeof fetchOptions === 'string') {\n      if (!isValidRelationship(model, fetchOptions)) {\n        return Promise.reject({\n          code: 400,\n          error: 'Invalid population for ' + model.constructor.name + ': ' + fetchOptions\n        });\n      } else {\n        return Promise.resolve(fetchOptions as any);\n      }\n    } else if (fetchOptions instanceof Array) {\n      return Promise.all(fetchOptions.map(fetchOption => {\n        if (!isValidRelationship(model, fetchOption)) {\n          return Promise.reject({\n            code: 400,\n            error: 'Invalid population for ' + model.constructor.name + ': ' + fetchOption\n          });\n        } else {\n          return Promise.resolve();\n        }\n      }))\n      .then(() => {\n        return Promise.resolve(fetchOptions);\n      });\n    } else {\n      return Promise.reject({\n        code: 400,\n        error: 'Invalid population for ' + model.constructor.name + ': ' + fetchOptions\n      });\n    }\n  });\n\n\n  function isValidRelationship(testModel: IPostgresModelClass<T>, testRelationship: string) {\n    if (!testModel.relationships) {\n      return false;\n    } else {\n      let isValid = false;\n      Object.values(testModel.relationships).forEach(relationship => {\n        if (relationship === testRelationship) {\n          isValid = true;\n        }\n      });\n      return isValid;\n    }\n  }\n}\n\n/**\n * Convert a fetch options string from the URL into a JSON object.\n *\n * @param fetchOptionsString\n * @returns {*}\n */\nfunction parseFetchOptions(fetchOptionsString: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      const options = JSON.parse(fetchOptionsString);\n      resolve(options);\n    } catch (err) {\n      reject('Invalid JSON for fetch options: ' + fetchOptionsString + ' - ' + err.message);\n    }\n  });\n}\n","\n\n// import {PostgresModel, IPostgresModelClass} from '../../models/shared/base';\n// import {IUserRequest} from '../../util/auth';\n// import {Controller, Response} from './base';\nimport {CrudHandlers} from './crud-handlers';\nimport { IUserRequest } from \"./IUserRequest\";\nimport { IPostgresModelClass, PostgresModel } from \"ts-postgres-model\";\nimport {Controller} from 'ts-express-controller';\nimport {Response} from 'express';\n\n/**\n * Default GET by ID\n */\nexport class GetRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private idParamName: string) {super({\n    routeParams: [idParamName]\n  });}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.getObjectById(req, this._type, params[this.idParamName]);\n  }\n}\n\n\n/**\n * Default POST from request JSON body\n */\nexport class PostRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>) {super();}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.postFromRequestBody(req, this._type);\n  }\n}\n\n/**\n * Default PUT by ID from request JSON body\n */\nexport class PutByIdRoute<T extends PostgresModel<T>> extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private idParamName: string) {super({\n    routeParams: [idParamName]\n  });}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.putObject(req, this._type, params[this.idParamName]);\n  }\n}\n\n/**\n * Default PUT by ID from request JSON body\n */\nexport class MultiPutRoute<T extends PostgresModel<T>> extends Controller {\n  constructor(private _type: IPostgresModelClass<any>) {super();}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.putObjects(req, this._type);\n  }\n}\n\n/**\n * Default DELETE by ID\n */\nexport class DeleteRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private idParamName: string) {super({\n    routeParams: [idParamName]\n  });}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.deleteObject(req, this._type, params[this.idParamName]);\n  }\n}\n\n/**\n * Default Query for all objects of a type\n */\nexport class QueryRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private fetchParams?: any, private _allowDeleted?: boolean) {super();}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.getAllObjects(req, this._type, this.fetchParams, this._allowDeleted);\n  }\n}\n\n\nexport class MarkDeletedRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private idParamName: string) {super({\n    routeParams: [idParamName]\n  });}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.setObjectDeleted(req, this._type, params[this.idParamName]);\n  }\n}\n\nexport class MarkUndeletedRoute extends Controller {\n  constructor(private _type: IPostgresModelClass<any>, private idParamName: string) {super({\n    routeParams: [idParamName]\n  });}\n  protected handleRequest(params: any, req: IUserRequest, res: Response) {\n    return CrudHandlers.setObjectUndeleted(req, this._type, params[this.idParamName]);\n  }\n}\n\n","\n\nimport * as PQueue from 'p-queue';\n\nexport class PromiseQueue {\n\n  private queue: PQueue;\n\n  constructor(maxConcurrent: number){\n    this.queue = new PQueue({concurrency: maxConcurrent});\n  }\n\n  public add(promiseFunction: () => Promise<any>): Promise<any> {\n    return this.queue.add(promiseFunction);\n  }\n\n  public runAllPromiseFunctions(promiseFunctions: Array<() => Promise<any>>): Promise<any> {\n    if (!promiseFunctions) {\n      return Promise.reject('promiseFunctions was not supplied');\n    } else if (promiseFunctions.length === 0) {\n      return Promise.resolve();\n    } else {\n      const addedPromises: Array<Promise<any>> = [];\n      promiseFunctions.forEach(promiseFunction => {\n        // console.log(\"Adding promiseFunction to queue...\");\n        addedPromises.push(this.add(promiseFunction));\n      });\n\n      return new Promise((resolve, reject) => {\n        Promise.all(addedPromises)\n        .then(results => {\n          // console.log(\"All promises resolved.\");\n          resolve(results);\n        })\n        .catch(err => {\n          // console.log(\"Queue promise failed...\");\n          reject(err);\n        });\n      });\n\n      // return Q.all(addedPromises);\n    }\n  }\n\n}\n\n","module.exports = require(\"p-queue\");","module.exports = require(\"ts-express-controller\");"],"sourceRoot":""}